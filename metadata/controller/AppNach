{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "AppNach"
    },
    "designerId": "76464acb-82ce-4eb6-b3ee-7c0807d5eaf5",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabNachApp",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabNachAppActivate",
                "implHandler": [
                    "//STORE",
                    "var StTekNach = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var StLgotaNach = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "var gridNachisl = Ext.getCmp('grNachKvartplata');",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var stAppartment = Ext.data.StoreManager.get(\"StAppartment\");",
                    "",
                    "var fmInfoNachApp = Ext.getCmp('fmInfoNachApp');",
                    "var fmBti = Ext.getCmp('fmBti');",
                    "",
                    "fmInfoNachApp.getForm().reset();",
                    "fmBti.getForm().reset();",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "",
                    "stAppartment.load({",
                    "    params: {",
                    "        what_id: values.get('address_id'),",
                    "        address_id:  values.get('address_id'),",
                    "        what:'Appartment',",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "",
                    "",
                    "        if(success){",
                    "",
                    "            if (records.length) {",
                    "                fmInfoNachApp.getForm().loadRecord(records[0]);",
                    "",
                    "                var adrec = fmInfoNachApp.getForm().findField('address').getValue();",
                    "                var fio = fmInfoNachApp.getForm().findField('nanim').getValue();",
                    "                var kod = fmInfoNachApp.getForm().findField('address_id').getValue();",
                    "",
                    "                fmBti.getForm().loadRecord(records[0]);",
                    "",
                    "",
                    "                fmInfoNachApp.setTitle('ид&nbsp;&nbsp'+ kod + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +",
                    "                                       adrec + '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' +  fio);",
                    "",
                    "            }",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "",
                    "StTekNach.load({",
                    "    params: {",
                    "        what:'KvartplataApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    callback: function(records,operation,success){",
                    "        if(success){",
                    "            //  console.log(fmInfoNachApp.getForm());",
                    "            gridNachisl.getView().getSelectionModel().select(0);",
                    "",
                    "        }else{",
                    "            // fmInfoNachApp.getForm().reset();",
                    "        }",
                    "    },",
                    "    scope:this",
                    "});",
                    "StLgotaNach.load({",
                    "    params: {",
                    "        what:'LgotaNachKvartplata',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    }",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabNachAppActivate",
            "designerId": "54eef26c-7073-414d-8193-0ef55388ef4e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabOplata",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabOplataActivate",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "//console.log(stUser);",
                    "",
                    "var StOplata = Ext.data.StoreManager.get(\"StOplata\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "",
                    "StOplata.load({",
                    "    params: {",
                    "        what:'OplataApp',",
                    "        address_id: values.get('address_id'),",
                    "        login:values.get('login'),",
                    "        password:values.get('password')",
                    "    },",
                    "    scope:this",
                    "});",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabOplataActivate",
            "designerId": "3d5d8d1e-dddd-4a99-98ef-2cb31ca49c94"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#exportBudjet",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onExportBudjetActivate",
                "implHandler": [
                    "var form = Ext.getCmp('fmExportBudjet');",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "form.getForm().findField('data').setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "form.getForm().findField('subjectTo').setValue('utszn5139@ukr.net');",
                    "form.getForm().findField('subjectFrom').setValue('svtpashkova@gmail.com');",
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = 'utszn';",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onExportBudjetActivate",
            "designerId": "2ba20c6b-10e0-45ce-a491-347ab96d76a7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabDbfLgota",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabDbfLgotaActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var dataNachSubsidia = Ext.getCmp('dataNachLgota');",
                    "var osmd_id = values.get('osmd_id');",
                    "var dt = new Date() ;",
                    "dt.setDate(dt.getDate() - 28);",
                    "dt.getDate();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "dataNachSubsidia.setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "var data = dataNachSubsidia.getValue();",
                    "",
                    "if(osmd_id){",
                    "",
                    "var StSubsidia = Ext.data.StoreManager.get(\"StDbfLgota\");",
                    "var btnGetSubsidiaOshadBank =  Ext.getCmp('btnGetLgotaOshadBank');",
                    "var btnPrintLgotaReestrToOshadBank =  Ext.getCmp('btnPrintLgotaReestrToOshadBank');",
                    "var btnPrintLgotaReestrFromOshadBank =  Ext.getCmp('btnPrintLgotaReestrFromOshadBank');",
                    "",
                    "var btnImportOshadBank =  Ext.getCmp('btnImportOshadBankLgota');",
                    "var btnExportOshadBank =  Ext.getCmp('btnExportOshadBankLgota');",
                    "var btnImportOplataOshad =  Ext.getCmp('btnImportOplataOshadLgota');",
                    "var btnImportOplataOsmd =  Ext.getCmp('btnImportOplataOsmdLgota');",
                    "var btnSubsidiaOtkatOsmd =  Ext.getCmp('btnLgotaOtkatOsmd');",
                    "",
                    "",
                    "    btnGetSubsidiaOshadBank.setDisabled(false);",
                    "    btnPrintLgotaReestrToOshadBank.setDisabled(false);",
                    "    btnPrintLgotaReestrFromOshadBank.setDisabled(false);",
                    "    btnImportOshadBank.setDisabled(false);",
                    "    btnExportOshadBank.setDisabled(false);",
                    "    btnImportOplataOshad.setDisabled(false);",
                    "    btnImportOplataOsmd.setDisabled(false);",
                    "    btnSubsidiaOtkatOsmd.setDisabled(false);",
                    "",
                    "",
                    "",
                    "    StSubsidia.load({",
                    "        params: {",
                    "            what:'getDbfLgota',",
                    "            login:login,",
                    "            password:password,",
                    "            data:data,",
                    "            osmd_id: osmd_id",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabDbfLgotaActivate",
            "designerId": "65abf2a9-066e-42d2-91ab-54de2d301958"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabSubsidia",
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabSubsidiaActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var dataNachSubsidia = Ext.getCmp('dataNachSubsidia');",
                    "var osmd_id = values.get('osmd_id');",
                    "var dt = new Date() ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "dataNachSubsidia.setValue(Ext.Date.format(firstDay, 'Y-m-d'));",
                    "var data = dataNachSubsidia.getValue();",
                    "",
                    "if(osmd_id){",
                    "",
                    "    var StSubsidia = Ext.data.StoreManager.get(\"StSubsidia\");",
                    "    var btnGetSubsidiaOshadBank =  Ext.getCmp('btnGetSubsidiaOshadBank');",
                    "    var btnPrintSubsReestrToOshadBank =  Ext.getCmp('btnPrintSubsReestrToOshadBank');",
                    "    var btnPrintSubsReestrFromOshadBank =  Ext.getCmp('btnPrintSubsReestrFromOshadBank');",
                    "",
                    "    var btnImportOshadBank =  Ext.getCmp('btnImportOshadBank');",
                    "    var btnExportOshadBank =  Ext.getCmp('btnExportOshadBank');",
                    "    var btnImportOplataOshad =  Ext.getCmp('btnImportOplataOshad');",
                    "    var btnImportOplataOsmd =  Ext.getCmp('btnImportOplataOsmd');",
                    "    var btnSubsidiaOtkatOsmd =  Ext.getCmp('btnSubsidiaOtkatOsmd');",
                    "",
                    "",
                    "    btnGetSubsidiaOshadBank.setDisabled(false);",
                    "    btnPrintSubsReestrToOshadBank.setDisabled(false);",
                    "    btnPrintSubsReestrFromOshadBank.setDisabled(false);",
                    "",
                    "    btnImportOshadBank.setDisabled(false);",
                    "    btnExportOshadBank.setDisabled(false);",
                    "    btnImportOplataOshad.setDisabled(false);",
                    "    btnImportOplataOsmd.setDisabled(false);",
                    "    btnSubsidiaOtkatOsmd.setDisabled(false);",
                    "",
                    "",
                    "",
                    "    StSubsidia.load({",
                    "        params: {",
                    "            what:'getSubsidia',",
                    "            login:login,",
                    "            password:password,",
                    "            data:data,",
                    "            osmd_id: osmd_id",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}",
                    ""
                ],
                "name": "activate",
                "scope": "me"
            },
            "name": "onTabSubsidiaActivate",
            "designerId": "df9eeb34-3398-4e47-9714-18f4c93c9986"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabKvartplata",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabKvartplataActivate",
                "implHandler": [
                    "//STORE",
                    "var form = Ext.getCmp('fmKvartplata');",
                    "var btAddNach = Ext.getCmp('btAddNachKv');",
                    "var grid = Ext.getCmp('grTarifHousesKv');",
                    "var store = grid.getStore();",
                    "store.removeAll();",
                    "var dt = new Date();",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "form.getForm().reset();",
                    "form.getForm().findField('data_nach').setValue(firstDay);",
                    "btAddNach.setText(\"Начислить квартплату за период   \"+ Ext.Date.format(firstDay, 'F,Y'));",
                    "",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabKvartplataActivate",
            "designerId": "3c89e3fc-906f-406f-a107-2c73a1f32e29"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabSubsUtszn",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabSubsUtsznActivate",
                "implHandler": [
                    "",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var osmd_id = values.get('osmd_id');",
                    "var form = Ext.getCmp('fmSubsUtszn');",
                    "var dt = new Date();",
                    "var firstDay =Ext.Date.add(dt, Ext.Date.DAY, -10);",
                    "var data_nach = form.getForm().findField('data_nach').getValue();",
                    "",
                    "",
                    "",
                    "if(osmd_id){",
                    "    var grid = Ext.getCmp('grSubsUtszn');",
                    "    var store = grid.getStore();",
                    "    var btnGetLgotaUtszn =  Ext.getCmp('btnGetSubsidiaUtszn');",
                    "    var btnPrintLgotaUtszn =  Ext.getCmp('btnPrintSubsidiaUtszn');",
                    "    var btnReestrSubsidiaUtszn =  Ext.getCmp('btnReestrSubsidiaUtszn');",
                    "    var btSubsInsOplata =  Ext.getCmp('btSubsInsOplata');",
                    "    var btnSubsidiaOtkat =  Ext.getCmp('btnSubsidiaOtkat');",
                    "",
                    "    btnGetLgotaUtszn.setDisabled(false);",
                    "    btnPrintLgotaUtszn.setDisabled(false);",
                    "    btnReestrSubsidiaUtszn.setDisabled(false);",
                    "    btSubsInsOplata.setDisabled(false);",
                    "    btnSubsidiaOtkat.setDisabled(false);",
                    "",
                    "",
                    "",
                    "    store.load({",
                    "        params: {",
                    "            what:'getSubsidiaUtszn',",
                    "            login:login,",
                    "            password:password,",
                    "            data:data_nach,",
                    "            osmd_id: osmd_id",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}",
                    "",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabSubsUtsznActivate",
            "designerId": "c85fdb6b-5236-426c-b8e3-81a458417822"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabLgotaUtszn",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabLgotaUtsznActivate",
                "implHandler": [
                    "var house_id = 0;",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "var osmd_id = values.get('osmd_id');",
                    "var form = Ext.getCmp('fmLgotaUtszn');",
                    "var dt = new Date();",
                    "var firstDay =Ext.Date.add(dt, Ext.Date.DAY, -10);",
                    "var data_nach = form.getForm().findField('data_nach').getValue();",
                    "",
                    "",
                    "",
                    "if(osmd_id){",
                    "    var grid = Ext.getCmp('grLgotaUtszn');",
                    "    var store = grid.getStore();",
                    "    var btnGetLgotaUtszn =  Ext.getCmp('btnGetLgotaUtszn');",
                    "    var btnPrintLgotaUtszn =  Ext.getCmp('btnPrintLgotaUtszn');",
                    "    var btnPrintLgotaReestrUtszn =  Ext.getCmp('btnPrintLgotaReestrUtszn');",
                    "    var btLgotaInsOplata =  Ext.getCmp('btLgotaInsOplata');",
                    "    var btnLgotaOtkat =  Ext.getCmp('btnLgotaOtkat');",
                    "",
                    "    btnGetLgotaUtszn.setDisabled(false);",
                    "    btnPrintLgotaUtszn.setDisabled(false);",
                    "    btnPrintLgotaReestrUtszn.setDisabled(false);",
                    "    btLgotaInsOplata.setDisabled(false);",
                    "    btnLgotaOtkat.setDisabled(false);",
                    "",
                    "",
                    "    store.load({",
                    "        params: {",
                    "            what:'getLgotaUtszn',",
                    "            login:login,",
                    "            password:password,",
                    "            data:data_nach,",
                    "            osmd_id: osmd_id",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "activate"
            },
            "name": "onTabLgotaUtsznActivate",
            "designerId": "45f045f3-08a3-4e95-ad4f-e87503c282ab"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grNachKvartplata",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrNachKvartplataSelectionChange",
                "implHandler": [
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StLgotaNachVoda = Ext.data.StoreManager.get(\"StLgotaNachVoda\");",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var form = Ext.getCmp('fmInfoNachApp');",
                    "if (selected.length > 0) {",
                    "    form.getForm().reset();",
                    "    form.getForm().loadRecord(selected[0]);",
                    "    StLgotaNachVoda.load({",
                    "        params: {",
                    "            what:'LgotaNachKvartplataData',",
                    "            address_id: values.get('address_id'),",
                    "            data:Ext.Date.format(selected[0].data.data,\"Ymd\"),",
                    "            login:values.get('login'),",
                    "            password:values.get('password')",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrNachKvartplataSelectionChange",
            "designerId": "1d5a88f7-712c-4c74-aecb-4e705cf9070a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grLgotaNachKvartplata",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrLgotaNachKvartplataSelectionChange",
                "implHandler": [
                    "var form = Ext.getCmp('fmInfoNachApp');",
                    "if (selected.length > 0) {",
                    "    form.getForm().findField('msq_lgota').setValue(selected[0].data.info);",
                    "",
                    "}"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onGrLgotaNachKvartplataSelectionChange",
            "designerId": "aca91640-b419-4f7b-b717-ad4ef1f46b51"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btAddLgotaPerer",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtAddLgotaPererClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//CONTROLLER",
                    "var value = button.findParentByType('form').getValues();",
                    "//STORE",
                    "if (value.summa !== \"0\") {",
                    "    var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "    var values =stUser.getAt(0);",
                    "    var vibor = values.get('vibor');",
                    "    this.getWinAddLgotaPerer().close();",
                    "    switch (vibor){",
                    "        case 'addLgotaVodaPerer':",
                    "            me.addLgotaPererVoda(value);",
                    "            break;",
                    "        case 'addLgotaStokiPerer':",
                    "            me.addLgotaPererStoki(value);",
                    "            break;",
                    "        case 'addLgotaPodogrevPerer':",
                    "            me.addLgotaPererPodogrev(value);",
                    "            break;",
                    "        case 'addLgotaOtopleniePerer':",
                    "            me.addLgotaPererOtoplenie(value);",
                    "            break;",
                    "        case 'addLgotaKvartplataPerer':",
                    "            me.addLgotaPererKvartplata(value);",
                    "            break;",
                    "        case 'addLgotaTboPerer':",
                    "            me.addLgotaPererTbo(value);",
                    "            break;",
                    "        case 'addLgotaVoda':",
                    "            me.addLgotaVoda(value);",
                    "            break;",
                    "        case 'addLgotaStoki':",
                    "            me.addLgotaStoki(value);",
                    "            break;",
                    "        case 'addLgotaPodogrev':",
                    "            me.addLgotaPodogrev(value);",
                    "            break;",
                    "        case 'addLgotaOtoplenie':",
                    "            me.addLgotaOtoplenie(value);",
                    "            break;",
                    "        case 'addLgotaKvartplata':",
                    "            me.addLgotaKvartplata(value);",
                    "            break;",
                    "        case 'addLgotaTbo':",
                    "            me.addLgotaTbo(value);",
                    "            break;",
                    "        case 'editLgotaVoda':",
                    "            me.editLgotaVoda(value);",
                    "            break;",
                    "        case 'editLgotaStoki':",
                    "            me.editLgotaStoki(value);",
                    "            break;",
                    "        case 'editLgotaPodogrev':",
                    "            me.editLgotaPodogrev(value);",
                    "            break;",
                    "        case 'editLgotaOtoplenie':",
                    "            me.editLgotaOtoplenie(value);",
                    "            break;",
                    "        case 'editLgotaKvartplata':",
                    "            me.editLgotaKvartplata(value);",
                    "            break;",
                    "        case 'editLgotaTbo':",
                    "            me.editLgotaTbo(value);",
                    "            break;",
                    "    }",
                    "} else {",
                    "    Ext.MessageBox.show({",
                    "        title: 'Контроль данных',",
                    "        msg: 'Введите правильную сумму',",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.ERROR",
                    "    });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtAddLgotaPererClick",
            "designerId": "3d2fa090-cc36-4142-a30e-8c999d079b24"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaPererKvartplata",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaPererKvartplata\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachKvartplata');",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){ ",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'KvartplataApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            }, ",
                    "            callback: function(records,operation,success){       ",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(0);        ",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this  ",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод перерасчета на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaPererKvartplata",
            "designerId": "aac4c437-2402-4129-96df-284658e132c2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editLgotaKvartplata",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"editLgotaKvartplata\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachKvartplata');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'KvartplataApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "editLgotaKvartplata",
            "designerId": "9adba167-e759-4a8c-9751-e155aef1b3fc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "addLgotaKvartplata",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StTekNachApp = Ext.data.StoreManager.get(\"StTekNachApp\");",
                    "var form = Ext.getCmp('tabFmAppKvartplata');",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    address_id:values.get('address_id'),",
                    "    address:values.get('address'),",
                    "    what:\"addLgotaKvartplata\"",
                    "};",
                    "",
                    "//GRID",
                    "var grNach = Ext.getCmp('grNachKvartplata');",
                    "var valueNachisl  = grNach.getView().getSelectionModel().getSelection()[0];",
                    "var ind  = grNach.getView().getStore().indexOf(valueNachisl);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StTekNachApp.load({",
                    "            params: {",
                    "                what:'KvartplataApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    grNach.getView().getSelectionModel().select(ind);",
                    "",
                    "                }else{",
                    "                    form.getForm().reset();",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Ввод начисления на бюджет',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ]
            },
            "name": "addLgotaKvartplata",
            "designerId": "607d8ece-14c1-410d-97a4-af7396d90e98"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinAddLgotaPerer",
                "selector": "#winAddLgotaPerer",
                "xtype": null
            },
            "name": "WinAddLgotaPerer",
            "designerId": "27bfce0b-9f31-47c3-b988-c92bf4fa7afb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btExportBudjet",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtExportBudjetClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "//var winExportLgota = Ext.ClassManager.instantiateByAlias('widget.winexportlgota');",
                    "var win = button.findParentByType('window');",
                    "var form = button.findParentByType('form');",
                    "var vibor = form.getForm().findField('vibor').getValue();",
                    "var what = \"ExportEmail\";",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "",
                    "    what:\"ExportEmail\"",
                    "};",
                    "//console.log(value);",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "//LOGIKA",
                    "",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Отправка почты...',",
                    "    msg: 'Отправка файла по Email.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "",
                    "QueryExport.exportToEmail(value,function(results){",
                    "    if(results.success){",
                    "        myMask.close();",
                    "        win.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Отправка файла по Email',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "",
                    "    } else {",
                    "        myMask.close();",
                    "        win.close();",
                    "",
                    "        Ext.MessageBox.show({",
                    "            title: 'Отправка файла по Email',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "    }",
                    "",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtExportBudjetClick",
            "designerId": "ecb5a5b7-e38d-4cdd-963f-9b8f5e7f8f70"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btControlLgot",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtControlLgotClick",
                "implHandler": [
                    "// in use",
                    "var value = button.findParentByType('form').getValues();",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');",
                    "var report = 'controlLgot';",
                    "var namereport = 'Контроль льгот';",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var tab = tabPnCenter.child('#'+report);",
                    "if (!tab) {",
                    "    tab  = tabPnCenter.add({",
                    "        xtype:'tabReportOrg',",
                    "        title:namereport,",
                    "        id:''+report+''",
                    "    });",
                    "",
                    "}",
                    "var reppan = tab.getComponent(0);",
                    "tabPnCenter.setActiveTab(tab);",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"controlLgot\",",
                    "    report:report",
                    "};",
                    "",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Отчеты...',",
                    "    msg: 'Загрузка отчета.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryReport.getResults(value,function(results){",
                    "    if (results.success===\"1\"){",
                    "        myMask.close();",
                    "        reppan.update(results.content);",
                    "        Ext.REPORTCONTENT =results.content;",
                    "        Ext.REPORTSQL =results.sql;",
                    "        Ext.REPORTTITLE =report;",
                    "    }else{",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({title: namereport,",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "});",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtControlLgotClick",
            "designerId": "dcea6bce-e70e-45a6-b5d7-94458856b6d5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btControlDbfLgot",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtControlDbfLgotClick",
                "implHandler": [
                    "// in use",
                    "",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StDbfLgota = Ext.data.StoreManager.get(\"StDbfLgota\");",
                    "",
                    "//COMPONENT",
                    "var form = button.findParentByType('form');",
                    "var value = form.getValues();",
                    "",
                    "var tabPnCenter =  Ext.getCmp('tabPnCenter');",
                    "var tab = tabPnCenter.child('#tabDbfLgota');",
                    "var usluga =form.getForm().findField('rbUsluga').inputValue;",
                    "StDbfLgota.proxy.setExtraParam('what', usluga);",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"ExportBudjetEmail\"",
                    "};",
                    "//LOGIKA",
                    "Ext.Object.merge(value, params);",
                    "",
                    "var myMask = Ext.Msg.show({",
                    "    title:'Загрузка ДБФ файла',",
                    "    msg: 'Загрузка ДБФ файла со списком льготников.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "",
                    "QueryAddress.updateRecords(value,function(result){",
                    "    if(result.success===\"1\"){ ",
                    "        StDbfLgota.load({",
                    "            params: {",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            callback: function(records,operation,success){",
                    "                if(success){",
                    "                    if (!tab) {",
                    "                        tab  = tabPnCenter.add({",
                    "                            xtype:'tabDbfLgota'",
                    "                        });",
                    "",
                    "                    }",
                    "                    myMask.close();",
                    "                    tabPnCenter.setActiveTab(tab); ",
                    "",
                    "                }else {",
                    "                    myMask.close();",
                    "",
                    "                }",
                    "            },",
                    "            scope:this",
                    "        });",
                    "",
                    "    } else {",
                    "        myMask.close();",
                    "",
                    "        Ext.MessageBox.show({",
                    "            title: 'Загрузка ДБФ файла ',",
                    "            msg: result.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "",
                    "    }    ",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtControlDbfLgotClick",
            "designerId": "c64e3e19-dfb8-46ec-a019-95098e0d1dcd"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinEditOplata",
                "selector": "#winEditOplata",
                "xtype": null
            },
            "name": "WinEditOplata",
            "designerId": "b46e404d-4df5-4c5f-9b2b-dca6086f986b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinEditDbfLgota",
                "selector": "#winEditDbfLgota",
                "xtype": null
            },
            "name": "WinEditDbfLgota",
            "designerId": "b51aca4e-9196-431d-8830-9866b96775c2"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "winImport",
                "selector": "winImport",
                "xtype": "winimport"
            },
            "name": "winImport",
            "designerId": "669d7708-cad2-490a-aebf-f484054431e4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value"
                ],
                "fn": "editOplataApp",
                "implHandler": [
                    "// in use",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var StOplata = Ext.data.StoreManager.get(\"StOplata\");",
                    "",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"editOplataApp\"",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по оплате',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StOplata.load({",
                    "            params: {",
                    "                what:'OplataApp',",
                    "                address_id: values.get('address_id'),",
                    "                login:values.get('login'),",
                    "                password:values.get('password')",
                    "            },",
                    "            scope:this",
                    "        });",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по оплате',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});",
                    ""
                ]
            },
            "name": "editOplataApp",
            "designerId": "8d5a085a-a265-4ddb-82dd-c89487a713c3"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btFixDolg",
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtFixDolgClick",
                "implHandler": [
                    "// in use",
                    "var me = this;",
                    "//STORE",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var value = button.findParentByType('form').getValues();",
                    "//console.log(value);",
                    "//LOGIN & PASSWORD",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    what:\"fixDolgTeplo\",",
                    "    fdata:value.fixdata",
                    "",
                    "};",
                    "",
                    "",
                    "//LOGIKA",
                    "",
                    "var myMask= Ext.Msg.show({",
                    "    title:'Фиксация задолженности...',",
                    "    msg: 'Фиксация задолженности.Ожидайте...',",
                    "    buttons: Ext.Msg.CANCEL,",
                    "    wait: true,",
                    "    modal: true,",
                    "    icon: Ext.Msg.INFO",
                    "});",
                    "",
                    "QueryAddress.updateRecords(params,function(results){",
                    "    if(results.success===\"1\"){",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Фиксация задолженности',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "    } else {",
                    "        myMask.close();",
                    "        Ext.MessageBox.show({",
                    "            title: 'Фиксация задолженности',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtFixDolgClick",
            "designerId": "43d70eb9-9cf8-48ba-9187-f5489cab74df"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btEditOplata",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "MyButton163",
                "fn": "onBtEditOplataClick",
                "implHandler": [
                    "var value = button.findParentByType('form').getValues();",
                    "var form = button.findParentByType('form');",
                    "var oplata = 0;",
                    "var kvartplata = form.getForm().findField('kvartplata').getValue();",
                    "var remont = form.getForm().findField('remont').getValue();",
                    "",
                    "var otoplenie = form.getForm().findField('otoplenie').getValue();",
                    "var ptn = form.getForm().findField('ptn').getValue();",
                    "",
                    "var podogrev = form.getForm().findField('podogrev').getValue();",
                    "var voda = form.getForm().findField('voda').getValue();",
                    "var stoki = form.getForm().findField('stoki').getValue();",
                    "var tbo = form.getForm().findField('tbo').getValue();",
                    "var summa = parseFloat(form.getForm().findField('summa').getValue()).toFixed(2);",
                    "oplata =parseFloat(kvartplata + remont+ otoplenie + ptn +  podogrev + voda + stoki + tbo).toFixed(2);",
                    "",
                    "if(summa === oplata) {",
                    "    if (summa !== \"0\") {",
                    "        var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "        var values =stUser.getAt(0);",
                    "        var vibor = values.get('vibor');",
                    "        this.getWinEditOplata().close();",
                    "        this.editOplataApp(value);",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Контроль данных',",
                    "            msg: 'Оплата равна 0',",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "} else {",
                    "    Ext.MessageBox.show({",
                    "        title: 'Контроль данных',",
                    "        msg: 'Не совпадают правая и левая части оплаты',",
                    "        buttons: Ext.MessageBox.OK,",
                    "        icon: Ext.MessageBox.ERROR",
                    "    });",
                    "}",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onBtEditOplataClick",
            "designerId": "38d8a67d-9d94-4090-aefa-40fe3e434ab8"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grTarifHousesKv",
                "designer|params": [
                    "model",
                    "selected",
                    "eOpts"
                ],
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrTarifHousesKvSelectionChange",
                "implHandler": [
                    "//STORE",
                    "",
                    "var stAddress = Ext.data.StoreManager.get('StAddressOrg');",
                    "var form = Ext.getCmp('fmKvartplata');",
                    "var btAddPerer = Ext.getCmp('btAddPererKv');",
                    "var btAddNachKvPrev = Ext.getCmp('btAddNachKvPrev');",
                    "",
                    "var viborTarif = Ext.getCmp('cbTarifKv');",
                    "var btAddNach = Ext.getCmp('btAddNachKv');",
                    "var btAddNachRemont = Ext.getCmp('btAddNachRemont');",
                    "var btAddNachDop = Ext.getCmp('btAddNachDop');",
                    "",
                    "var btnClearNach = Ext.getCmp('btnClearNachKv');",
                    "var btnInsTarif = Ext.getCmp('btnInsTarifKv');",
                    "var tarif = Ext.getCmp('tarKv');",
                    "",
                    "var dt = new Date();",
                    "var lastDay = Ext.Date.getLastDateOfMonth( dt ) ;",
                    "var firstDay = Ext.Date.getFirstDateOfMonth( dt ) ;",
                    "",
                    "//console.log(selected);",
                    "if (selected.length > 0) {",
                    "    form.getForm().loadRecord(selected[0]);",
                    "",
                    "    form.getForm().findField('sdata').setValue(Ext.Date.format(Ext.Date.getFirstDateOfMonth(selected[0].data.data), 'Y-m-d'));",
                    "    form.getForm().findField('fdata').setValue(Ext.Date.format( Ext.Date.getLastDateOfMonth(selected[0].data.data), 'Y-m-d'));",
                    "    form.getForm().findField('address_ot').clearValue();",
                    "    form.getForm().findField('address_do').clearValue();",
                    "    form.getForm().findField('allkv').setValue(1);",
                    "    form.getForm().findField('tarif_manual').setValue(0);",
                    "    form.getForm().findField('ch_kv9').setValue(form.getForm().findField('kv9').getValue());",
                    "    form.getForm().findField('ch_kv9f1').setValue(form.getForm().findField('kv9f1').getValue());",
                    "    form.getForm().findField('ch_kv16').setValue(form.getForm().findField('kv16').getValue());",
                    "    form.getForm().findField('ch_kv16f1').setValue(form.getForm().findField('kv16f1').getValue());",
                    "",
                    "    if (Ext.Date.format(Ext.Date.getFirstDateOfMonth(selected[0].data.data), 'Y-m-d') ==",
                    "        Ext.Date.format(Ext.Date.getFirstDateOfMonth(form.getForm().findField('data_nach').getValue()), 'Y-m-d')) {",
                    "        btAddNach.setDisabled(false);",
                    "        btAddNachDop.setDisabled(false);",
                    "        btAddNachRemont.setDisabled(false);",
                    "",
                    "        btnClearNach.setDisabled(false);",
                    "        btAddPerer.setDisabled(true);",
                    "        btAddNachKvPrev.setDisabled(false);",
                    "        btnInsTarif.setDisabled(false);",
                    "",
                    "",
                    "        viborTarif.clearValue();",
                    "        viborTarif.setDisabled(false);",
                    "    }else{",
                    "        btAddNach.setDisabled(true);",
                    "        btnClearNach.setDisabled(true);",
                    "        btAddNachDop.setDisabled(true);",
                    "        btAddNachRemont.setDisabled(true);",
                    "",
                    "        btAddPerer.setDisabled(false);",
                    "        btAddNachKvPrev.setDisabled(true);",
                    "        viborTarif.setDisabled(true);",
                    "        btnInsTarif.setDisabled(true);",
                    "    }",
                    "    tarif.setValue(0);",
                    "",
                    "",
                    "    stAddress.removeAll();",
                    "    stAddress.load({",
                    "        params: {",
                    "            what:'AddressFromHousesTarif',",
                    "            what_id: selected[0].data.house_id",
                    "        },",
                    "        callback: function(records,operation,success){",
                    "            if(success){",
                    "                form.getForm().findField('address_ot').setValue(records[0].get('address_id'));",
                    "                form.getForm().findField('address_do').setValue(records[0].get('address_id'));",
                    "            }",
                    "",
                    "        },",
                    "        scope:this",
                    "    });",
                    "",
                    "}",
                    ""
                ],
                "name": "selectionchange"
            },
            "name": "onGrTarifHousesKvSelectionChange",
            "designerId": "c54d284b-d81e-4e46-81ba-c13901aa057f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "WinAddLgotaPerer",
                "selector": "#winAddLgotaPerer"
            },
            "name": "WinAddLgotaPerer",
            "designerId": "987742f4-1304-4042-830e-2a4b6938d477"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#grSubsidia",
                "designer|params": [
                    "model",
                    "selected",
                    "eOpts"
                ],
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onGrSubsidiaSelectionChange",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var btnControlSummaSubsid = Ext.getCmp('btnControlSummaSubsid');",
                    "var btnSubsidiaOtkat = Ext.getCmp('btnSubsidiaOtkat');",
                    "",
                    "if (selected.length > 0) {",
                    "    values.set({'osmd_id':selected[0].data.osmd_id});",
                    "",
                    "",
                    "    btnControlSummaSubsid.setDisabled(false);",
                    "    btnSubsidiaOtkat.setDisabled(false);        ",
                    "}",
                    ""
                ],
                "name": "selectionchange"
            },
            "name": "onGrSubsidiaSelectionChange",
            "designerId": "1d053ae0-8189-4b20-b9ac-e9742e48508f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btEditDbfLgota",
                "designer|params": [
                    "button",
                    "e",
                    "eOpts"
                ],
                "designer|targetType": "Ext.button.Button",
                "fn": "onBtEditDbfLgotaClick",
                "implHandler": [
                    "",
                    "",
                    "",
                    "var value = button.findParentByType('form').getValues();",
                    "var dataNachDbfLgota = Ext.getCmp('dataNachDbfLgota');",
                    "",
                    "var form = button.findParentByType('form');",
                    "var StDbfLgota = Ext.data.StoreManager.get(\"StDbfLgota\");",
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var vibor = value.vibor;",
                    "this.getWinEditDbfLgota().close();",
                    "var what = \"editDbfLgota\";",
                    "",
                    "switch (vibor) {",
                    "    case \"add\":",
                    "        what = \"addDbfLgota\";",
                    "        break;",
                    "    case \"edit\":",
                    "        what =\"editDbfLgota\";",
                    "}",
                    "",
                    "var values =stUser.getAt(0);",
                    "var params = {",
                    "    login:values.get('login'),",
                    "    password:values.get('password'),",
                    "    osmd_id: values.get('osmd_id'),",
                    "",
                    "    what:what",
                    "};",
                    "",
                    "//LOGIKA",
                    "",
                    "Ext.Object.merge(value, params);",
                    "QueryAddress.updateRecords(value,function(results){",
                    "    if(results.success===\"1\"){",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по оплате',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.INFO",
                    "        });",
                    "        StDbfLgota.load({",
                    "            params: {",
                    "                login:values.get('login'),",
                    "                password:values.get('password'),",
                    "                data:dataNachDbfLgota.getValue(),",
                    "                osmd_id: values.get('osmd_id'),",
                    "                what:\"getDbfLgota\"",
                    "",
                    "            },",
                    "",
                    "            scope:this",
                    "        });",
                    "",
                    "    } else {",
                    "        Ext.MessageBox.show({",
                    "            title: 'Редактирование записи  по оплате',",
                    "            msg: results.msg,",
                    "            buttons: Ext.MessageBox.OK,",
                    "            icon: Ext.MessageBox.ERROR",
                    "        });",
                    "    }",
                    "",
                    "});"
                ],
                "name": "click"
            },
            "name": "onBtEditDbfLgotaClick",
            "designerId": "721d7aff-34ee-4fc5-9016-8ecb3930be63"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#tabPrivatBank",
                "designer|params": [
                    "component",
                    "eOpts"
                ],
                "designer|targetType": "Ext.panel.Panel",
                "fn": "onTabPrivatBankActivate",
                "implHandler": [
                    "var stUser = Ext.data.StoreManager.get(\"StUser\");",
                    "var values =stUser.getAt(0);",
                    "var login = values.get('login');",
                    "var password = values.get('password');",
                    "",
                    "var osmd_id = values.get('osmd_id');",
                    "//console.log(osmd_id);",
                    "",
                    "var stPrivatBank = Ext.data.StoreManager.get(\"StPrivatBank\");",
                    "var grid = Ext.getCmp('grPrivatBank');",
                    "var controlOplataPrivat =  Ext.getCmp('controlOplataPrivat');",
                    "var btnExportPrivatBank =  Ext.getCmp('btnExportPrivatBank');",
                    "var insReestrPrivatToOplata =  Ext.getCmp('insReestrPrivatToOplata');",
                    "var btnImportPrivatBank =  Ext.getCmp('btnImportPrivatBank');",
                    "if(osmd_id){",
                    "    controlOplataPrivat.setDisabled(false);",
                    "    btnExportPrivatBank.setDisabled(false);",
                    "    insReestrPrivatToOplata.setDisabled(false);",
                    "    btnImportPrivatBank.setDisabled(false);",
                    "",
                    "    stPrivatBank.load({",
                    "        params: {",
                    "            what:'getPrivatBank',",
                    "            login:login,",
                    "            password:password,",
                    "            osmd_id: osmd_id",
                    "        },",
                    "        scope:this",
                    "    });",
                    "}",
                    ""
                ],
                "name": "activate"
            },
            "name": "onTabPrivatBankActivate",
            "designerId": "f59069a6-ba85-46f5-844d-1f86531ffdc4"
        }
    ]
}