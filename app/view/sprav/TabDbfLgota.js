/*
 * File: app/view/sprav/TabDbfLgota.js
 * Date: Sun Dec 01 2019 00:55:03 GMT+0200 (EET)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Osmd.view.sprav.TabDbfLgota', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.tabdbflgota',

    requires: [
        'Osmd.view.sprav.TabDbfLgotaViewModel',
        'Osmd.view.sprav.TabDbfLgotaViewController',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.plugin.BufferedRenderer',
        'Ext.grid.column.Number',
        'Ext.grid.column.Date',
        'Ext.form.field.Date',
        'Ext.form.field.Number',
        'Ext.grid.column.Action',
        'Ext.grid.feature.Summary',
        'Ext.grid.plugin.RowEditing',
        'Ext.grid.feature.GroupingSummary',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.field.ComboBox',
        'Ext.toolbar.Separator',
        'Ext.form.field.Hidden'
    ],

    controller: 'tabdbflgota',
    viewModel: {
        type: 'tabdbflgota'
    },
    id: 'tabDbfLgota',
    scrollable: true,
    layout: 'fit',
    closable: true,
    title: 'Льготники',
    defaultListenerScope: true,

    initConfig: function(instanceConfig) {
        var me = this,
            config = {
                items: [
                    {
                        xtype: 'gridpanel',
                        id: 'grDbfLgota',
                        scrollable: true,
                        title: '',
                        store: 'StDbfLgota',
                        viewConfig: {
                            getRowClass: function(record, rowIndex, rowParams, store) {
                                if(record.get('pr') === 0 ){
                                    return 'change_color_yellow';

                                } else  {
                                    return  'change_color_green';
                                }
                            },
                            emptyText: 'Нет записей для отправки в порт'
                        },
                        plugins: [
                            Ext.create('Ext.grid.plugin.BufferedRenderer', {
                                pluginId: 'bufferPort'
                            }),
                            Ext.create('Ext.grid.plugin.BufferedRenderer', {

                            }),
                            Ext.create('Ext.grid.plugin.RowEditing', {
                                pluginId: 'rowEditSubsidia',
                                listeners: {
                                    edit: 'onRowEditingEdit1'
                                }
                            })
                        ],
                        columns: [
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 60,
                                dataIndex: 'rec_id',
                                menuDisabled: true,
                                text: 'Запись',
                                format: '0'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 55,
                                dataIndex: 'raion_id',
                                menuDisabled: true,
                                text: 'Район',
                                format: '0'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 64,
                                dataIndex: 'house_id',
                                text: 'Дом_ид',
                                format: '0'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 113,
                                dataIndex: 'house',
                                text: 'Дом'
                            },
                            {
                                xtype: 'numbercolumn',
                                width: 51,
                                dataIndex: 'address_id',
                                menuDisabled: true,
                                text: 'Ид',
                                format: '0'
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 95,
                                dataIndex: 'utszn_id',
                                menuDisabled: true,
                                text: 'УТСЗН',
                                format: '0'
                            },
                            {
                                xtype: 'gridcolumn',
                                hidden: true,
                                width: 91,
                                dataIndex: 'address',
                                menuDisabled: true,
                                text: 'Ощал ид'
                            },
                            {
                                xtype: 'gridcolumn',
                                width: 158,
                                dataIndex: 'address',
                                menuDisabled: true,
                                text: 'Адрес'
                            },
                            {
                                xtype: 'gridcolumn',
                                items: {
                                    xtype: 'textfield',
                                    flex: 1,
                                    margin: 2,
                                    enableKeyEvents: true,
                                    listeners: {
                                        keyup: function() {
                                                        var store = this.up('tablepanel').store;
                                                        store.clearFilter();
                                                        if (this.value) {
                                                            store.filter({
                                                                property     : 'fio',
                                                                value         : this.value,
                                                                anyMatch      : true,
                                                                caseSensitive : false
                                                            });
                                                        }
                                                    },
                                        buffer: 1000
                                    }
                                },
                                width: 236,
                                dataIndex: 'fio',
                                menuDisabled: true,
                                text: 'Ф.И.О.',
                                editor: {
                                    xtype: 'textfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 32,
                                dataIndex: 'pr',
                                menuDisabled: true,
                                text: 'Пр',
                                format: '0'
                            },
                            {
                                xtype: 'datecolumn',
                                width: 90,
                                align: 'center',
                                dataIndex: 'data',
                                menuDisabled: true,
                                text: 'Дата',
                                format: 'd-m-Y',
                                editor: {
                                    xtype: 'datefield',
                                    format: 'd-m-Y',
                                    submitFormat: 'Ymd'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 105,
                                align: 'right',
                                dataIndex: 'nachisleno',
                                menuDisabled: true,
                                text: 'Начислено',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 105,
                                align: 'right',
                                dataIndex: 'dolg',
                                menuDisabled: true,
                                text: 'Долг',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                summaryRenderer: function(val, params, data) {
                                    var n =Ext.util.Format.number(val,'0,000.00');
                                    if (val >= 0) {
                                        return '<span style="color:#000; font-weight:bold;">' + n + '</span>';
                                    } else  {
                                        return '<span style="color:red; font-weight:bold;">' + n + '</span>';
                                    }
                                },
                                summaryType: 'sum',
                                width: 102,
                                align: 'right',
                                dataIndex: 'oplata',
                                menuDisabled: true,
                                text: 'Субсидия',
                                editor: {
                                    xtype: 'numberfield'
                                }
                            },
                            {
                                xtype: 'numbercolumn',
                                hidden: true,
                                width: 52,
                                dataIndex: 'raion_id',
                                menuDisabled: true,
                                text: 'р-н',
                                format: '0',
                                editor: {
                                    xtype: 'numberfield',
                                    decimalPrecision: 0
                                }
                            },
                            {
                                xtype: 'actioncolumn',
                                editRenderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                    var val="";
                                    return val;
                                },
                                hidden: true,
                                width: 30,
                                menuDisabled: true,
                                altText: 'Удалить запись',
                                icon: 'css/images/ico/no.png',
                                items: [
                                    {
                                        handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                            var grid = view.findParentByType('grid');
                                            var store = view.getStore();
                                            var plugin = grid.getPlugin('rowEditSubsidia');
                                            plugin.cancelEdit();
                                            Ext.MessageBox.show({
                                                title: 'Внимание!',
                                                msg: 'Вы удаляете запись ! Подтвердите или отмените свои действия!',
                                                buttons: Ext.MessageBox.OKCANCEL,
                                                icon: Ext.MessageBox.WARNING,

                                                buttonText:{
                                                    ok: "Удалить!",
                                                    cancel: "Отмена"
                                                },
                                                fn:function(btn){
                                                    if(btn=='ok'){
                                                        // view.getStore().removeAt(rowIndex);
                                                        store.remove(record);

                                                        store.sync({
                                                            success: function(){
                                                                Ext.MessageBox.show({title: 'Удаление записи',
                                                                    msg:'Запись удалена',
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.INFO
                                                                });
                                                            },
                                                            failure: function(){
                                                                Ext.MessageBox.show({title: 'Удаление записи',
                                                                    msg:'Запись не удалена',
                                                                    buttons: Ext.MessageBox.OK,
                                                                    icon: Ext.MessageBox.ERROR
                                                                });

                                                            },
                                                            scope: this
                                                        });
                                                    }
                                                }

                                            });
                                        },
                                        icon: 'resources/css/images/ico/no.png'
                                    }
                                ]
                            }
                        ],
                        features: [
                            {
                                ftype: 'summary',
                                dock: 'top'
                            },
                            {
                                ftype: 'groupingsummary',
                                id: 'groupSubsidia',
                                depthToIndent: 1000,
                                startCollapsed: true
                            }
                        ],
                        dockedItems: [
                            {
                                xtype: 'toolbar',
                                dock: 'top',
                                items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            var grid = button.findParentByType('grid');
                                            var gr = grid.getView().getFeature('groupSubsidia');


                                            if (gr.isAllCollapsed() ) {

                                                //  gr.expandAll();
                                            } else {
                                                var myMask= Ext.Msg.show({
                                                    title:'Свернуть...',
                                                    msg: 'Свпрачивание таблицы по группам.Ожидайте...',
                                                    buttons: Ext.Msg.CANCEL,
                                                    wait: true,
                                                    modal: true,
                                                    icon: Ext.Msg.INFO
                                                });
                                                gr.collapseAll();
                                                myMask.close();
                                            }

                                        },
                                        id: 'btnSubsidiaCollExpand1',
                                        icon: 'resources/css/images/ico/sprav.png',
                                        text: '',
                                        tooltip: 'Свернуть Развернуть'
                                    },
                                    {
                                        xtype: 'datefield',
                                        id: 'dataNachLgota',
                                        width: 193,
                                        fieldLabel: 'Период',
                                        labelWidth: 55,
                                        format: 'F,Y',
                                        startDay: 1,
                                        submitFormat: 'Ymd',
                                        listeners: {
                                            change: {
                                                fn: 'onDataNachLgotaChange',
                                                scope: 'controller'
                                            }
                                        }
                                    },
                                    {
                                        xtype: 'combobox',
                                        id: 'viborOsmdLgota',
                                        width: 308,
                                        fieldLabel: 'ОСМД',
                                        labelWidth: 45,
                                        name: 'osmd_id',
                                        displayField: 'osmd',
                                        queryMode: 'local',
                                        store: 'StOsmd',
                                        valueField: 'osmd_id',
                                        listeners: {
                                            select: 'onComboboxSelect2111111'
                                        }
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //in use
                                            var winImport = Ext.ClassManager.instantiateByAlias('widget.winimport');
                                            var form = Ext.getCmp('fmImport');
                                            var vibor =  'lgotaOshadBank';
                                            var osmd_id =  Ext.getCmp('viborOsmdLgota').getValue();
                                            winImport.setTitle('Загрузка льгот из Ощадбанк)');
                                            winImport.show();
                                            form.getForm().findField('vibor').setValue(vibor);
                                            form.getForm().findField('osmd_id').setValue(osmd_id);
                                        },
                                        disabled: true,
                                        id: 'btnImportOshadBankLgota',
                                        width: 185,
                                        icon: 'resources/css/images/ico/door_in.png',
                                        text: 'Импорт из Ощадбанка'
                                    }
                                ]
                            },
                            {
                                xtype: 'toolbar',
                                dock: 'top',
                                height: 45,
                                items: [
                                    {
                                        xtype: 'tbseparator'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //COMBO
                                            var grid = button.findParentByType('grid');
                                            var store = grid.store;
                                            var data =  Ext.getCmp('dataNachLgota').getValue();
                                            var osmd_id =  Ext.getCmp('viborOsmdLgota').getValue();


                                            //STORE
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);

                                            //LOGIKA
                                            var params = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                data:data,
                                                osmd_id:osmd_id,
                                                what:'exportOshadBankLgota'
                                            };


                                            //LOGIKA
                                            var myMask= Ext.Msg.show({
                                                title:'Обновление записи...',
                                                msg: 'Обновление записей в базе льгот.Ожидайте...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){

                                                    store.load({
                                                        params: {
                                                            what:'getDbfLgota',
                                                            login:values.get('login'),
                                                            password:values.get('password'),
                                                            data:data,
                                                            osmd_id:osmd_id
                                                        }
                                                    });
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы льгот',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы льгот',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        },
                                        disabled: true,
                                        id: 'btnGetLgotaOshadBank',
                                        width: 251,
                                        icon: 'resources/css/images/ico/xsldbg_refresh.png',
                                        text: 'Сформировать реестр для Банка'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var tabPnCenter =  Ext.getCmp('tabPnCenter');
                                            var data =  Ext.getCmp('dataNachLgota').getValue();
                                            var osmd_id  =  Ext.getCmp('viborOsmdLgota').getValue();
                                            // console.log(usluga_id);
                                            var values =stUser.getAt(0);
                                            var login = values.get('login');
                                            var password = values.get('password');

                                            var report = 'ReestrToOshadBankLgota';
                                            var namereport = 'Реестр';
                                            var value = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                osmd_id :osmd_id,
                                                data:data,
                                                report:report,
                                                what:report
                                            };

                                            var tab = tabPnCenter.child('#'+report);
                                            if (!tab) {
                                                tab  = tabPnCenter.add({
                                                    xtype:'tabreportorg',
                                                    title:namereport,
                                                    id:''+report+''
                                                });

                                            }
                                            tabPnCenter.setActiveTab(tab);
                                            var reppan = tab.getComponent(0);
                                            // Basic mask:
                                            var myMask = Ext.Msg.show({
                                                title:'Выписка реестра...',
                                                msg: 'Выписка ...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });
                                            setTimeout(function(){

                                                QueryKassa.getRaspechatka(value,function(data){
                                                    if (data){
                                                        reppan.update(data.content);
                                                        Ext.REPORTCONTENT =data.content;
                                                        Ext.REPORTSQL =data.sql;
                                                        Ext.REPORTTITLE =report;
                                                        myMask.close();

                                                    } else {

                                                        myMask.close();
                                                        Ext.MessageBox.show({
                                                            title: 'Ошибка ',
                                                            msg: 'Документ не создан',
                                                            buttons: Ext.MessageBox.OK,
                                                            icon: Ext.MessageBox.ERROR
                                                        });
                                                    }
                                                });
                                            }, 1000);

                                        },
                                        disabled: true,
                                        id: 'btnPrintLgotaReestrToOshadBank',
                                        width: 215,
                                        icon: 'resources/css/images/ico/add.png',
                                        text: 'Печать реестра для Банка'
                                    },
                                    {
                                        xtype: 'tbseparator'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //in use
                                            var winExportLgota = Ext.ClassManager.instantiateByAlias('widget.winexportlgota');
                                            var stUser = Ext.data.StoreManager.get("StUser");

                                            var form = Ext.getCmp('fmExportBudjet');
                                            var osmd_id =  Ext.getCmp('viborOsmdLgota').getValue();
                                            var viborOsmd =  Ext.getCmp('viborOsmdLgota').getRawValue();

                                            var data =  Ext.getCmp('dataNachLgota').getValue();
                                            var tema ="";
                                            var message = "";
                                            var values =stUser.getAt(0);
                                            //console.log(vibor);



                                            winExportLgota.setTitle('Экспорт льготников '+viborOsmd+' по  квартплате в ОщадБанк');
                                            tema = viborOsmd+' льготники по квартплате за '  + Ext.Date.format(data, 'F,Y');
                                            message = viborOsmd+' Список льготников по квартплате за '+ Ext.Date.format(data, 'F,Y');

                                            winExportLgota.show();
                                            form.getForm().findField('data').setValue(data);
                                            form.getForm().findField('vibor').setValue("oshadbank_lgota");
                                            form.getForm().findField('osmd_id').setValue(osmd_id);

                                            form.getForm().findField('subjectTo').setValue('ykis.osbb@gmail.com');
                                            form.getForm().findField('subjectFrom').setValue('ykis.osbb@gmail.com');
                                            form.getForm().findField('tema').setValue(tema);
                                            form.getForm().findField('message').setValue(message);


                                        },
                                        disabled: true,
                                        id: 'btnExportOshadBankLgota',
                                        width: 144,
                                        icon: 'resources/css/images/ico/add.png',
                                        text: 'Експорт реестра'
                                    },
                                    {
                                        xtype: 'tbseparator',
                                        width: 100
                                    },
                                    {
                                        xtype: 'hiddenfield',
                                        fieldLabel: 'Label',
                                        name: 'usluga'
                                    }
                                ]
                            },
                            {
                                xtype: 'toolbar',
                                dock: 'top',
                                items: [
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //COMBO
                                            var grid = button.findParentByType('grid');
                                            var store = grid.store;
                                            var data =  Ext.getCmp('dataNachLgota').getValue();
                                            var osmd_id =  Ext.getCmp('viborOsmdLgota').getValue();

                                            //STORE
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);

                                            //LOGIKA
                                            var params = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                data:data,
                                                osmd_id:osmd_id,
                                                what:'importOshadBankLgota'
                                            };


                                            //LOGIKA
                                            var myMask= Ext.Msg.show({
                                                title:'Обновление записи...',
                                                msg: 'Обновление записей в базе льгот.Ожидайте...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){

                                                    store.load({
                                                        params: {
                                                            login:values.get('login'),
                                                            password:values.get('password'),
                                                            data:data,
                                                            osmd_id:osmd_id
                                                        }
                                                    });
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы льгот',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title: 'Обновление базы льгот',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        },
                                        disabled: true,
                                        id: 'btnImportOplataOshadLgota',
                                        width: 255,
                                        icon: 'resources/css/images/ico/xsldbg_refresh.png',
                                        text: 'Получить реестр из Банка'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var tabPnCenter =  Ext.getCmp('tabPnCenter');
                                            var data =  Ext.getCmp('dataNachLgota').getValue();
                                            var osmd_id  =  Ext.getCmp('viborOsmdLgota').getValue();
                                            // console.log(usluga_id);
                                            var values =stUser.getAt(0);
                                            var login = values.get('login');
                                            var password = values.get('password');

                                            var report = 'ReestrFromOshadBankLgota';
                                            var namereport = 'Реестр';
                                            var value = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                osmd_id :osmd_id,
                                                data:data,
                                                report:report,
                                                what:report
                                            };

                                            var tab = tabPnCenter.child('#'+report);
                                            if (!tab) {
                                                tab  = tabPnCenter.add({
                                                    xtype:'tabreportorg',
                                                    title:namereport,
                                                    id:''+report+''
                                                });

                                            }
                                            tabPnCenter.setActiveTab(tab);
                                            var reppan = tab.getComponent(0);
                                            // Basic mask:
                                            var myMask = Ext.Msg.show({
                                                title:'Выписка реестра...',
                                                msg: 'Выписка ...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });
                                            setTimeout(function(){

                                                QueryKassa.getRaspechatka(value,function(data){
                                                    if (data){
                                                        reppan.update(data.content);
                                                        Ext.REPORTCONTENT =data.content;
                                                        Ext.REPORTSQL =data.sql;
                                                        Ext.REPORTTITLE =report;
                                                        myMask.close();

                                                    } else {

                                                        myMask.close();
                                                        Ext.MessageBox.show({
                                                            title: 'Ошибка ',
                                                            msg: 'Документ не создан',
                                                            buttons: Ext.MessageBox.OK,
                                                            icon: Ext.MessageBox.ERROR
                                                        });
                                                    }
                                                });
                                            }, 1000);

                                        },
                                        disabled: true,
                                        id: 'btnPrintLgotaReestrFromOshadBank',
                                        width: 215,
                                        icon: 'resources/css/images/ico/add.png',
                                        text: 'Печать реестра из Банка'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {
                                            //COMBO
                                            var grid = button.findParentByType('grid');
                                            var store = grid.store;
                                            var data =  Ext.getCmp('dataNachLgota').getValue();
                                            var osmd_id =  Ext.getCmp('viborOsmdLgota').getValue();

                                            //STORE
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);

                                            //LOGIKA
                                            var params = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                data:data,
                                                osmd_id:osmd_id,
                                                what:'input_lgota_oshadbank'
                                            };


                                            //LOGIKA
                                            var myMask= Ext.Msg.show({
                                                title:'Запись льгот...',
                                                msg: 'Запись в базу оплаты льгот.Ожидайте...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){

                                                    store.load({
                                                        params: {
                                                            what:'getDbfLgota',
                                                            login:values.get('login'),
                                                            password:values.get('password'),
                                                            data:data,
                                                            osmd_id:osmd_id
                                                        }
                                                    });
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title:'Запись льгот...',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title:'Запись льгот...',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        },
                                        disabled: true,
                                        id: 'btnImportOplataOsmdLgota',
                                        width: 313,
                                        icon: 'resources/css/images/ico/add.png',
                                        text: 'Ввод субсидии из реестра в базу оплаты'
                                    },
                                    {
                                        xtype: 'button',
                                        handler: function(button, event) {

                                            //COMBO
                                            var grid = button.findParentByType('grid');
                                            var store = grid.store;
                                            var data =  Ext.getCmp('dataNachLgota').getValue();
                                            var osmd_id =  Ext.getCmp('viborOsmdLgota').getValue();

                                            //STORE
                                            var stUser = Ext.data.StoreManager.get("StUser");
                                            var values =stUser.getAt(0);

                                            //LOGIKA
                                            var params = {
                                                login:values.get('login'),
                                                password:values.get('password'),
                                                data:data,
                                                osmd_id:osmd_id,
                                                what:'otkat_oplata_lgota_oshad'
                                            };


                                            //LOGIKA
                                            var myMask= Ext.Msg.show({
                                                title:'Удаление льгот  ...',
                                                msg: 'Удаление льгот из базы оплаты .Ожидайте...',
                                                buttons: Ext.Msg.CANCEL,
                                                wait: true,
                                                modal: true,
                                                icon: Ext.Msg.INFO
                                            });

                                            QueryAddress.updateRecords(params,function(results){
                                                if(results.success==="1"){

                                                    store.load({
                                                        params: {
                                                            what:'getDbfLgota',
                                                            login:values.get('login'),
                                                            password:values.get('password'),
                                                            data:data,
                                                            osmd_id:osmd_id
                                                        }
                                                    });
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title:'Удаление льгот...',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.INFO
                                                    });
                                                } else {
                                                    myMask.close();
                                                    Ext.MessageBox.show({
                                                        title:'Удаление льгот...',
                                                        msg: results.msg,
                                                        buttons: Ext.MessageBox.OK,
                                                        icon: Ext.MessageBox.ERROR
                                                    });

                                                }

                                            });
                                        },
                                        disabled: true,
                                        id: 'btnLgotaOtkatOsmd',
                                        icon: 'resources/css/images/ico/add.png',
                                        text: 'Откатить оплату субсидий'
                                    }
                                ]
                            }
                        ]
                    }
                ]
            };
        if (instanceConfig) {
            me.getConfigurator().merge(me, config, instanceConfig);
        }
        return me.callParent([config]);
    },

    onRowEditingEdit1: function(editor, context, eOpts) {
        var grid = editor.grid;
        var store = grid.getStore();
        var sm = store.getUpdatedRecords();
        var data = grid.getSelectionModel();
        if(sm.length) {

            store.sync({

                success: function(){
                    store.load();
                },
                scope:this
            });
        }

    },

    onComboboxSelect2111111: function(combo, record, eOpts) {
        var stUser = Ext.data.StoreManager.get("StUser");
        var values =stUser.getAt(0);
        var login = values.get('login');
        var password = values.get('password');

        var stSubsidia = Ext.data.StoreManager.get("StDbfLgota");
        var btnGetSubsidiaOshadBank =  Ext.getCmp('btnGetLgotaOshadBank');
        var btnPrintLgotaReestrToOshadBank =  Ext.getCmp('btnPrintLgotaReestrToOshadBank');
        var btnPrintLgotaReestrFromOshadBank =  Ext.getCmp('btnPrintLgotaReestrFromOshadBank');
        var btnImportOshadBank =  Ext.getCmp('btnImportOshadBankLgota');
        var btnExportOshadBank =  Ext.getCmp('btnExportOshadBankLgota');
        var btnImportOplataOshad =  Ext.getCmp('btnImportOplataOshadLgota');
        var btnImportOplataOsmd =  Ext.getCmp('btnImportOplataOsmdLgota');
        var btnSubsidiaOtkatOsmd =  Ext.getCmp('btnLgotaOtkatOsmd');

        var data =  Ext.getCmp('dataNachLgota').getValue();
        // console.log(usluga_id);

        if (record) {
            values.set({'osmd_id':record.get('osmd_id')});
            stUser.sync();
            btnGetSubsidiaOshadBank.setDisabled(false);
            btnPrintLgotaReestrToOshadBank.setDisabled(false);
            btnPrintLgotaReestrFromOshadBank.setDisabled(false);
            btnImportOshadBank.setDisabled(false);
            btnExportOshadBank.setDisabled(false);
            btnImportOplataOshad.setDisabled(false);
            btnImportOplataOsmd.setDisabled(false);
            btnSubsidiaOtkatOsmd.setDisabled(false);



            stSubsidia.load({
                params: {
                    what:'getDbfLgota',
                    login:login,
                    password:password,
                    data:data,
                    osmd_id:record.get('osmd_id')
                },
                scope:this
            });
        }

    }

});